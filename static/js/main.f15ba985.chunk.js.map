{"version":3,"sources":["textFields.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","container","display","flexWrap","textField","marginLeft","spacing","marginRight","width","button","margin","rightIcon","input","fab","extendedIcon","TextFields","props","classes","Grid","className","noValidate","autoComplete","TextField","id","label","placeholder","name","value","Gpa","gpa","onChange","change","required","credit","Button","size","onClick","del","variant","color","App","addClasses","setState","subject","state","concat","handleGpaChange","idx","e","newGPA","map","grades","sidx","target","disp","gpas","handleRemoveAClass","deletedItemArray","console","log","splice","CalcGpa","preventDefault","sub","credits","regExp","checkGpa","checkcredit","validation","i","length","match","alert","parseFloat","this","item","Paper","style","padding","Typography","component","Container","fixed","onSubmit","Fab","float","aria-label","ButtonGroup","type","fullWidth","Component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f15ba985.chunk.js","sourcesContent":["import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\"\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: \"42%\"\r\n  },\r\n  button: {\r\n    margin: theme.spacing(3)\r\n  },\r\n  rightIcon: {\r\n    marginLeft: theme.spacing(1)\r\n  },\r\n  input: {\r\n    display: \"none\"\r\n  },\r\n  fab: {\r\n    margin: theme.spacing(1),\r\n    \r\n  },\r\n  extendedIcon: {\r\n    marginRight: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nexport default function TextFields(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid>\r\n    <form className={classes.container} noValidate autoComplete=\"off\">\r\n      <TextField\r\n        id=\"standard-with-placeholder\"\r\n        label=\"GPA\"\r\n        placeholder=\"GPA\"\r\n        className={classes.textField}\r\n        margin=\"normal\"\r\n        name=\"gpa\"\r\n        value={props.Gpa.gpa}\r\n        onChange={props.change}\r\n        required\r\n      />\r\n\r\n      <TextField\r\n        id=\"standard-with-placeholder\"\r\n        label=\"Credit\"\r\n        placeholder=\"Credit\"\r\n        className={classes.textField}\r\n        margin=\"normal\"\r\n        name=\"credit\"\r\n        value={props.Gpa.credit}\r\n        onChange={props.change}\r\n        required\r\n      />\r\n\r\n      <Button\r\n        size=\"small\"\r\n        onClick={props.del}\r\n        variant=\"contained\"\r\n        color=\"secondary\"\r\n        className={classes.button}\r\n      >\r\n        Delete\r\n        <DeleteIcon className={classes.rightIcon} />\r\n      </Button>\r\n\r\n      \r\n    </form>\r\n    </Grid>\r\n  );\r\n}\r\n","import React, {Component} from \"react\";\nimport ReactDOM from \"react-dom\";\nimport TextBoxes from \"./textFields\"\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport Icon from '@material-ui/core/Icon';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\n\n\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n     disp: \"none\",\n     gpas: 0.0,\n      subject: [\n        {\n          gpa: \"\",\n          credit: \"\"\n        }\n      ]\n    };\n  }\n\n  addClasses = () =>{\n      this.setState({\n        subject: this.state.subject.concat({gpa: \"\", credit: \"\"})\n      })\n  }\n\n  handleGpaChange = (idx) => (e) =>{\n   \n\n    const newGPA = this.state.subject.map((grades, sidx) => {\n      if(idx !== sidx){\n        return grades\n      }else{\n     \n        return {...grades, [e.target.name] : e.target.value, [e.target.name] : e.target.value}\n      }\n    })\n\n  \n\n    this.setState({\n      subject : newGPA,\n      disp : \"block\",\n      gpas: \"\"\n    })\n  }\n\n  handleRemoveAClass = idx => () =>{\n   let deletedItemArray = [{}]\n   deletedItemArray = this.state.subject\n   \n\n   console.log(deletedItemArray)\n\n   deletedItemArray.splice(idx, 1)\n\n   console.log(deletedItemArray)\n   this.setState({\n     subject : deletedItemArray\n   })\n\n   console.log(this.state.subject)\n\n  }\n\n\n\n  CalcGpa = (e) =>{\n    e.preventDefault()\n    let gpa = 0\n    let sub = this.state.subject\n    let credits = 0\n      const regExp = /^[-+]?[0-9]*\\.?[0-9]+\\b$/gi\n    let checkGpa = \" \";\n    let checkcredit = \"\";\n    let validation= true;\n   \n\n    console.log()\n     \n    for(let i = 0; i < sub.length; i++){\n      checkGpa = sub[i].gpa.match(regExp)\n      checkcredit = sub[i].credit.match(regExp)\n\n      console.log(checkGpa, checkcredit)\n      if(checkGpa === null || checkcredit === null){\n        alert(\"invalid input, check input\")\n        validation = false\n        break;\n      }\n      \n      validation = true;\n      gpa = gpa + (parseFloat(sub[i].gpa) * parseFloat(sub[i].credit))\n      credits = parseFloat(sub[i].credit) + credits\n    }\n  if(validation === true){\n    gpa = gpa / credits\n\n\n\n    console.log(gpa)\n\n    this.setState({\n      gpas: gpa,\n      disp:\"block\"\n    })\n    }else{\n      this.setState({\n        disp: \"none\"\n      })\n    }\n  }\n\n  \n  \n\n  render() {\n    const styles ={\n      float: \"right\",\n      margin: \"20px\"\n    }\n    const grades = this.state.subject.map((item, idx) => {\n      return (\n        <Paper style ={{padding: \"10px\"}}>\n        \n        <Typography component=\"p\">\n          class #{idx + 1}: {item.gpa} credit: {item.credit}\n        </Typography>\n      </Paper>\n      )\n    })\n    const disp = {\n      display : this.state.disp\n    }\n    return (\n      <Container fixed>\n        \n        <form onSubmit = {this.CalcGpa}>\n          {this.state.subject.map((subject, idx) => (\n          <div>\n            \n            <TextBoxes \n            Gpa = {subject} \n            change = {this.handleGpaChange(idx)} \n            del = {this.handleRemoveAClass(idx)}\n            />\n          </div>\n        ))}\n\n        \n        \n        <Fab style = {styles}color=\"primary\" aria-label=\"Add\" onClick = {this.addClasses}>\n        <AddIcon />\n      </Fab>\n            \n     \n\n      <ButtonGroup type = \"submit\" fullWidth aria-label=\"Full width outlined button group\">\n          <Button type = \"submit\">Calculate GPA</Button>  \n        </ButtonGroup>\n        \n        </form>\n        \n        \n\n       <p style = {disp}> {grades} </p>\n\n       <p style = {disp}> \n       <Paper style ={{padding: \"10px\"}}>\n        \n        <Typography component=\"p\">\n          GPA: {this.state.gpas}\n        </Typography>\n      </Paper>\n       \n       </p>\n\n                \n      </Container>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}